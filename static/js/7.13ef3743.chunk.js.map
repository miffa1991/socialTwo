{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControl/FormControls.jsx","components/common/FormsControl/FormControls.module.css","components/Login/Login.jsx"],"names":["required","value","maxLength","max","length","Textarea","input","meta","props","hasError","touched","error","className","s","formControl","Input","module","exports","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","component","validate","name","placeholder","type","connect","state","isAuth","auth","isLogin","login","to","formData","email","password","rememberMe","console","log"],"mappings":"0FAAA,oEAAO,IAAMA,EAAW,SAAAC,GACrB,IAAIA,EACJ,MAAO,yBAIGC,EAAY,SAACC,GAAD,OAAS,SAACF,GAChC,GAAIA,EAAMG,OAASD,EAAK,MAAO,sB,kJCJrBE,EAAW,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAASC,EAAU,gCAE3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACG,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACG,oDAAcL,GAAWE,IACxBC,GAAY,+BAAOF,EAAKI,YAMrBI,EAAQ,SAAC,GAA4B,IAA3BT,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAASC,EAAU,gCAExCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACG,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACG,iDAAWL,GAAWE,IACrBC,GAAY,+BAAOF,EAAKI,a,oBCpBlCK,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,qHCmBpEC,EAAiBC,YAAU,CAC9BC,KAAM,SADcD,EAZL,SAACX,GAChB,OACG,uBAAMa,SAAUb,EAAMc,aAAtB,UACG,8BAAK,cAAC,IAAD,CAAOC,UAAWR,IAAOS,SAAUxB,IAAUyB,KAAM,QAASC,YAAa,YAC9E,8BAAK,cAAC,IAAD,CAAOH,UAAWR,IAAOS,SAAUxB,IAAUyB,KAAM,WAAYE,KAAM,WAAYD,YAAa,eACnG,gCAAK,cAAC,IAAD,CAAOH,UAAWR,IAAOY,KAAM,WAAYF,KAAM,eAAtD,kBACCjB,EAAMG,OAAS,8BAAMH,EAAMG,QAC5B,8BAAK,mDA2BCiB,uBAHS,SAACC,GAAD,MAAY,CACjCC,OAAOD,EAAME,KAAKC,WAEmB,CAAEC,WAA3BL,EAlBD,SAACpB,GAMZ,OAAGA,EAAMsB,OACC,cAAC,IAAD,CAAUI,GAAG,cAEhB,gCACJ,uCACA,cAAChB,EAAD,CAAgBG,SAVF,SAACc,GAEf3B,EAAMyB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,YACxDC,QAAQC,IAAIL","file":"static/js/7.13ef3743.chunk.js","sourcesContent":["export const required = value => {\n   if (value) return undefined;\n   return 'error requaired field'; \n}\n\n\nexport const maxLength = (max) => (value) => {\n   if (value.length > max) return 'error max-length';\n   return undefined; \n}","// import React from 'react';\nimport s from './FormControls.module.css';\n\nexport const Textarea = ({input, meta, ...props}) =>{\n\n   const hasError = meta.touched && meta.error;\n   return(\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n         <textarea {...input} {...props} />\n         {hasError && <span>{meta.error}</span>}\n      </div>\n   )\n}\n\n\nexport const Input = ({input, meta, ...props}) =>{\n\n   const hasError = meta.touched && meta.error;\n   return(\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n         <input {...input} {...props} />\n         {hasError && <span>{meta.error}</span>}\n      </div>\n   )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2gmnG\",\"error\":\"FormControls_error__1_o23\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../../utils/validators/validators';\nimport { login } from '../../redux/auth-reducer';\nimport { Input } from '../common/FormsControl/FormControls';\n\nconst LoginForm = (props) =>{\n   return(\n      <form onSubmit={props.handleSubmit}>\n         <div><Field component={Input} validate={required} name={'email'} placeholder={'email'} /></div>\n         <div><Field component={Input} validate={required} name={'password'} type={'password'} placeholder={'password'} /></div>\n         <div><Field component={Input} type={'checkbox'} name={'rememberMe'} /> remember me</div>\n         {props.error && <div>{props.error}</div>}\n         <div><button>Login</button></div>\n      </form>\n   )\n}\n\nconst LoginReduxForm = reduxForm({\n   form: 'login'\n})(LoginForm);\n\nconst Login = (props) =>{\n   const onSubmit = (formData) => {\n      \n      props.login(formData.email, formData.password, formData.rememberMe);\n      console.log(formData);\n   }\n   if(props.isAuth){\n      return <Redirect to=\"/profile/\" />\n   }\n   return <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n   </div>\n}\n\nconst mapStateToProps = (state) => ({\n   isAuth:state.auth.isLogin\n});\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}