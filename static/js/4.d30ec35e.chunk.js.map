{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControl/FormControls.jsx","components/common/FormsControl/FormControls.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Posts/Posts.module.css","components/Profile/InfoUser/InfoUser.module.css","components/Profile/Profile.module.css","components/Profile/InfoUser/StatusUserWithHook.jsx","components/Profile/InfoUser/InfoUser.jsx","components/Profile/Posts/PostPublic/PostPublic.jsx","components/Profile/Posts/AddPostForm.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","maxLength","max","length","Textarea","input","meta","props","hasError","touched","error","className","s","formControl","Input","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","StatusUserWithHook","useState","state","setstate","status","setstatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","InfoUser","profile","infoUser","fullName","aboutMe","src","photos","large","alt","Preloader","PostPublic","postSend","id","maxLength20","AddPostReduxForm","reduxForm","form","addPostWall","onSubmit","handleSubmit","Field","component","name","cols","rows","validate","AddPostForm","formData","console","log","post","addPost","Posts","React","memo","postElements","posts","map","p","message","wallPosts","PostsContainer","connect","profilePage","postWall","dispatch","text","addNewPostActionCreator","Profile","ProfileContainer","userID","this","match","params","authID","getProfile","getStatus","Component","compose","auth","isLogin","withRouter"],"mappings":"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","file":"static/js/4.d30ec35e.chunk.js","sourcesContent":["export const required = value => {\n   if (value) return undefined;\n   return 'error requaired field'; \n}\n\n\nexport const maxLength = (max) => (value) => {\n   if (value.length > max) return 'error max-length';\n   return undefined; \n}","// import React from 'react';\nimport s from './FormControls.module.css';\n\nexport const Textarea = ({input, meta, ...props}) =>{\n\n   const hasError = meta.touched && meta.error;\n   return(\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n         <textarea {...input} {...props} />\n         {hasError && <span>{meta.error}</span>}\n      </div>\n   )\n}\n\n\nexport const Input = ({input, meta, ...props}) =>{\n\n   const hasError = meta.touched && meta.error;\n   return(\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n         <input {...input} {...props} />\n         {hasError && <span>{meta.error}</span>}\n      </div>\n   )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2gmnG\",\"error\":\"FormControls_error__1_o23\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallPosts\":\"Posts_wallPosts__2IFTM\",\"addPostWall\":\"Posts_addPostWall__-5Fl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUser\":\"InfoUser_infoUser__1mSfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","import React, {useState, useEffect} from 'react';\n\nconst StatusUserWithHook = (props) => {\n   const [state, setstate] = useState(false);\n   const [status, setstatus] = useState(props.status);\n\n   useEffect(() => { //Возвращаем после отрисовки страницы\n      setstatus(props.status);\n   }, [props.status]); // Выполняем каждый раз когда стату изменился. Если указать [] то будет выполнятся только один раз\n\n   const activeMode = () => {\n      setstate(true);  // меняем локальний стейт\n   }\n   const deActiveMode = () => {\n      setstate(false);  // меняем локальний стейт\n      props.updateStatus(status);\n   }\n   const onChangeStatus = (e) =>{\n      \n      setstatus(e.currentTarget.value);\n   }\n\n      return <div>\n         {!state &&\n         <div onDoubleClick={activeMode}>{status || '----'}</div>\n         }\n         {state &&\n            <input onChange={onChangeStatus} onBlur={deActiveMode} autoFocus={true} value={status}/>\n         }\n         </div>\n   \n}\n\n\nexport default StatusUserWithHook;","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './InfoUser.module.css';\nimport StatusUserWithHook from './StatusUserWithHook';\n\nconst InfoUser = (props) => {\n   if(!props.profile){\n      return  <Preloader />\n   }\n\n   return(\n      <div className={s.infoUser}>\n         <div className=\"name\">{props.profile.fullName}</div>\n         <div className=\"aboutMe\">{props.profile.aboutMe}</div>\n         <img src={props.profile.photos.large} className=\"avatar\" alt=\"\"/>\n         {/* <div className=\"statusLife\">{props.profile.lookingForAJobDescription}</div> */}\n         <StatusUserWithHook status={props.status} updateStatus={props.updateStatus} />\n\n      </div>\n   );\n}\n\nexport default InfoUser;","import React from 'react';\n\n\nconst PostPublic = (props) =>{\n   \n   return(\n      <div className=\"postItem\" key={props.id}>\n            {props.postSend}\n      </div>\n   );\n}\n\nexport default PostPublic;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLength, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControl/FormControls';\nimport s from './Posts.module.css';\n\nconst maxLength20 = maxLength(20);\nconst PostForm = (props) => {\n   return (\n      <form className={s.addPostWall} onSubmit={props.handleSubmit}>\n         <Field component={Textarea} name=\"post\" cols=\"30\" rows=\"10\" validate={[required, maxLength20]} />\n         <button>Send</button>\n      </form>\n   )\n}\n\nconst AddPostReduxForm = reduxForm({\n   form: 'addPost'\n})(PostForm);\n\n\nconst AddPostForm = (props) =>{\n   const addPost = (formData) => {\n       console.log(formData.post);\n      props.addPost(formData.post);\n   }\n   return <AddPostReduxForm onSubmit={addPost} />\n}\n\n\nexport default AddPostForm;","import React from 'react';\nimport s from './Posts.module.css';\nimport PostPublic from './PostPublic/PostPublic';\nimport AddPostForm from './AddPostForm';\n\n\nconst Posts = React.memo(props => {\n   //  debugger;\n   let postElements = props.posts.map( p => ( <PostPublic postSend={p.message} key={p.id} id={p.id} />) );\n   // let postElementRef = React.createRef();//создаем пустую ссылку\n\n   return(\n      <div className={s.wallPosts}>\n       <AddPostForm addPost={props.addPost} />\n         <div className=\"postPublic\">\n    \n            {postElements}\n         </div>\n      </div>\n   )\n})\n\nexport default Posts;","import { connect } from 'react-redux';\nimport { addNewPostActionCreator} from '../../../redux/profile-reducer';\nimport Posts from './Posts';\n\n\nlet mapStateToProps = (state) => {\n   return {\n      posts: state.profilePage.postWall\n   }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n   return {\n      addPost:(text) => {\n         dispatch(addNewPostActionCreator(text)); \n      },\n   }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer;","import React from 'react';\nimport InfoUser from './InfoUser/InfoUser';\n\nimport s from './Profile.module.css';\n\nimport PostsContainer from './Posts/PostsContainer';\n\nconst Profile = (props) => {\n\n   \n\n   return (\n      <div className={s.profile}>\n         <InfoUser profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n         <PostsContainer />\n      </div>\n   );\n} \nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from \"./Profile\";\nimport { getProfile, updateStatus, getStatus } from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n// import { withAuthRedirect } from '../../redux/hoc/withAuthRedirect';\n\nclass ProfileContainer extends React.Component{\n\n   \n   componentDidMount(){\n      let userID = this.props.match.params.userID;\n      if(!userID){\n         userID = this.props.authID;\n         // if(!userID){\n         //    this.props.history.push('/login');\n         // }\n      }\n\n      this.props.getProfile(userID); // thunk из profile-reducer, получаем данные пользователя\n      this.props.getStatus(userID); // thunk из profile-reducer, получаем статус пользователя\n      \n   }\n   render(){\n       \n      return(\n         <Profile {...this.props} profile={this.props.profile} \n                  status={this.props.status} updateStatus={this.props.updateStatus}/>\n      );\n   }\n}\n\n\n\nlet mapStateToProps = (state) => ({\n   profile:state.profilePage.profile,\n   status:state.profilePage.status,\n   authID:state.auth.id,\n   isLogin:state.auth.isLogin\n});\n\nexport default compose(\n   connect(mapStateToProps, {getProfile, updateStatus, getStatus }),\n   withRouter,\n   // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}