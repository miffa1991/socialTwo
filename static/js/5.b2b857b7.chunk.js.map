{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControl/FormControls.jsx","components/common/FormsControl/FormControls.module.css","components/Messages/Messages.module.css","components/Messages/Dialogs/Dialogs.jsx","components/Messages/MessageItem/MessageItem.jsx","components/Messages/MessageForm.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["required","value","maxLength","max","length","Textarea","input","meta","props","hasError","touched","error","className","s","formControl","Input","module","exports","Dialogs","path","id","to","userMessage","src","avatar","alt","name","MessageItem","messageItem","message","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","cols","rows","MessageForm","formData","addMessage","Messages","dialogElements","dialogArr","map","d","messageElements","messageArr","m","dialogsContainer","dialogs","messagesSend","MessagesContainer","connect","state","messagePage","dispatch","addNewMessageActionCreator"],"mappings":"0FAAA,oEAAO,IAAMA,EAAW,SAAAC,GACrB,IAAIA,EACJ,MAAO,yBAIGC,EAAY,SAACC,GAAD,OAAS,SAACF,GAChC,GAAIA,EAAMG,OAASD,EAAK,MAAO,sB,kJCJrBE,EAAW,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAASC,EAAU,gCAE3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACG,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACG,oDAAcL,GAAWE,IACxBC,GAAY,+BAAOF,EAAKI,YAMrBI,EAAQ,SAAC,GAA4B,IAA3BT,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAASC,EAAU,gCAExCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACG,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACG,iDAAWL,GAAWE,IACrBC,GAAY,+BAAOF,EAAKI,a,oBCpBlCK,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,oBCA1ED,EAAOC,QAAU,CAAC,iBAAmB,mCAAmC,QAAU,0BAA0B,aAAe,iC,kKCc5GC,EAVC,SAACV,GACd,IAAIW,EAAO,YAAcX,EAAMY,GAC/B,OACG,eAAC,IAAD,CAASC,GAAIF,EAAMP,UAAWC,IAAES,YAAhC,UACG,qBAAKC,IAAI,IAAIX,UAAWC,IAAEW,OAAQC,IAAI,KACtC,sBAAMb,UAAWC,IAAEa,KAAnB,SAA0BlB,EAAMkB,W,kBCD1BC,EANK,SAACnB,GAClB,OACG,qBAAKI,UAAWC,IAAEe,YAAlB,SAAgCpB,EAAMqB,W,oCCStCC,EAAmBC,YAAU,CAChCC,KAAM,eADgBD,EATD,SAACvB,GACtB,OACG,uBAAOyB,SAAUzB,EAAM0B,aAAvB,UACG,cAACC,EAAA,EAAD,CAAOC,UAAW/B,IAAUgC,SAAUrC,IAAU0B,KAAM,UAAWY,KAAK,KAAKC,KAAK,OAChF,wDAkBMC,EARK,SAAChC,GAIlB,OAAO,cAACsB,EAAD,CAAkBG,SAHN,SAACQ,GACjBjC,EAAMkC,WAAWD,EAASZ,aCSdc,EAxBD,SAACnC,GAEf,IAAIoC,EAAiBpC,EAAMqC,UAAUC,KAAK,SAAAC,GAAC,OAAK,cAAC,EAAD,CAASrB,KAAMqB,EAAErB,KAAiBN,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAC1E4B,EAAkBxC,EAAMyC,WAAWH,KAAK,SAAAI,GAAC,OAAK,cAAC,EAAD,CAAarB,QAASqB,EAAErB,SAAcqB,EAAE9B,OAQ1F,OACG,sBAAKR,UAAWC,IAAEsC,iBAAlB,UACG,qBAAKvC,UAAWC,IAAEuC,QAAlB,SACIR,IAEJ,sBAAKhC,UAAWC,IAAEwC,aAAlB,UACIL,EACD,cAAC,EAAD,CAAaN,WAAclC,EAAMkC,oBCLpCY,EAAoBC,aAfJ,SAACC,GACpB,MAAO,CACJX,UAAUW,EAAMC,YAAYZ,UAC5BI,WAAWO,EAAMC,YAAYR,eAIV,SAACS,GACvB,MAAO,CACJhB,WAAY,SAACb,GACV6B,EAASC,YAA2B9B,QAKnB0B,CAA6CZ,GACxDW","file":"static/js/5.b2b857b7.chunk.js","sourcesContent":["export const required = value => {\n   if (value) return undefined;\n   return 'error requaired field'; \n}\n\n\nexport const maxLength = (max) => (value) => {\n   if (value.length > max) return 'error max-length';\n   return undefined; \n}","// import React from 'react';\nimport s from './FormControls.module.css';\n\nexport const Textarea = ({input, meta, ...props}) =>{\n\n   const hasError = meta.touched && meta.error;\n   return(\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n         <textarea {...input} {...props} />\n         {hasError && <span>{meta.error}</span>}\n      </div>\n   )\n}\n\n\nexport const Input = ({input, meta, ...props}) =>{\n\n   const hasError = meta.touched && meta.error;\n   return(\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n         <input {...input} {...props} />\n         {hasError && <span>{meta.error}</span>}\n      </div>\n   )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2gmnG\",\"error\":\"FormControls_error__1_o23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Messages_dialogsContainer__2a57h\",\"dialogs\":\"Messages_dialogs__-Pvq7\",\"messagesSend\":\"Messages_messagesSend__264Jb\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Dialogs.module.css';\n\n\nconst Dialogs = (props) =>{\n   let path = \"/dialogs/\" + props.id;\n   return(\n      <NavLink to={path} className={s.userMessage}>\n         <img src=\"#\" className={s.avatar} alt=\"\"/>\n         <span className={s.name}>{props.name}</span>\n      </NavLink>\n   );\n}\n\nexport default Dialogs;","import React from 'react';\nimport s from './MessageItem.module.css';\n\nconst MessageItem = (props) => {\n   return(\n      <div className={s.messageItem}>{props.message}</div>\n   )\n}\n\nexport default MessageItem;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../../utils/validators/validators';\nimport { Textarea } from '../common/FormsControl/FormControls';\n\nconst MessageFormSend = (props) => {\n   return (\n      <form  onSubmit={props.handleSubmit}>\n         <Field component={Textarea} validate={required} name={'message'} cols=\"30\" rows=\"10\" />\n         <button >Send Message</button>\n      </form>\n   )\n}\n\nconst MessageReduxForm = reduxForm({\n   form: 'sendMessage'\n})(MessageFormSend);\n\n\nconst MessageForm = (props) =>{\n   const addMessage = (formData) => {\n      props.addMessage(formData.message);\n   }\n   return <MessageReduxForm onSubmit={addMessage} />\n}\n\n\nexport default MessageForm;","import React from 'react';\nimport s from './Messages.module.css';\nimport Dialogs from './Dialogs/Dialogs';\nimport MessageItem from './MessageItem/MessageItem';\nimport MessageForm from './MessageForm';\n\nconst Messages = (props) =>{\n   // debugger;\n   let dialogElements = props.dialogArr.map( d => (<Dialogs name={d.name} key={d.id} id={d.id} />));\n   let messageElements = props.messageArr.map( m => (<MessageItem message={m.message} key={m.id} />));\n   //let messageElementRef = React.createRef(); //створюемо пусту ссылку\n\n   // let changeMessage = (e) => {\n   //    let text = e.target.value;\n   //    props.changeMessage(text);\n   // }\n   \n   return (\n      <div className={s.dialogsContainer}>\n         <div className={s.dialogs} >\n            {dialogElements}\n         </div>\n         <div className={s.messagesSend} >\n            {messageElements}\n            <MessageForm addMessage = {props.addMessage} />\n         </div>\n      </div>\n      );\n   }\n   \n   export default Messages;","import { connect } from 'react-redux';\nimport { addNewMessageActionCreator } from '../../redux/dialogs-reducer';\nimport Messages from './Messages';\n\n   let mapStateToProps = (state) => {\n      return {\n         dialogArr:state.messagePage.dialogArr,\n         messageArr:state.messagePage.messageArr\n      }\n   }\n\n   let mapDispatchToProps = (dispatch) => {\n      return {\n         addMessage: (message) => {\n            dispatch(addNewMessageActionCreator(message));\n         },\n      }\n   }\n   \n   const MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\n   export default MessagesContainer;"],"sourceRoot":""}